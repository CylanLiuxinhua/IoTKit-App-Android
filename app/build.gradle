apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.cylan.jiafeigou"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }

    dexOptions {
        jumboMode = true
    }

}
apply plugin: 'com.neenbedankt.android-apt'


dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile rootProject.ext.junit
    testCompile rootProject.ext.robolectric
    compile rootProject.ext.appcompat
    compile rootProject.ext.butterknife
    compile rootProject.ext.rxAndroid
    compile rootProject.ext.ultra_ptr
    compile rootProject.ext.appSupport
    apt rootProject.ext.apt
    compile rootProject.ext.glide
    compile rootProject.ext.glideSupport
    compile rootProject.ext.permis
    apt rootProject.ext.permisApt
    compile project(':jlib')
    compile project(':WebRtcAndroid')
}


android.applicationVariants.all { variant ->
    variant.outputs.each { output ->
        output.processManifest.doLast {
            def manifestOutFile = output.processManifest.manifestOutputFile
            def appkey
            // cylan matappkey:Aqc1103156296  zhongxing matappkey:ATQ1JV694AKT
            if (project.hasProperty('oem') && oem != 'cylan') {
                appkey = "ATQ1JV694AKT"
            } else {
                appkey = "Aqc1103156296"
            }

            def newFileContents = manifestOutFile.getText('UTF-8').replace("MATAPPKEY", appkey)
            manifestOutFile.write(newFileContents, 'UTF-8')

        }
    }
}